# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.7

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /Applications/CLion.app/Contents/bin/cmake/bin/cmake

# The command to remove a file.
RM = /Applications/CLion.app/Contents/bin/cmake/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /nfs/2016/m/mponomar/project/git/Corewar

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /nfs/2016/m/mponomar/project/git/Corewar/cmake-build-debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/Applications/CLion.app/Contents/bin/cmake/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/Applications/CLion.app/Contents/bin/cmake/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /nfs/2016/m/mponomar/project/git/Corewar/cmake-build-debug/CMakeFiles /nfs/2016/m/mponomar/project/git/Corewar/cmake-build-debug/CMakeFiles/progress.marks
	$(MAKE) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /nfs/2016/m/mponomar/project/git/Corewar/cmake-build-debug/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named Corewar

# Build rule for target.
Corewar: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 Corewar
.PHONY : Corewar

# fast build rule for target.
Corewar/fast:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/build
.PHONY : Corewar/fast

libft/libft/ft_atoi.o: libft/libft/ft_atoi.c.o

.PHONY : libft/libft/ft_atoi.o

# target to build an object file
libft/libft/ft_atoi.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_atoi.c.o
.PHONY : libft/libft/ft_atoi.c.o

libft/libft/ft_atoi.i: libft/libft/ft_atoi.c.i

.PHONY : libft/libft/ft_atoi.i

# target to preprocess a source file
libft/libft/ft_atoi.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_atoi.c.i
.PHONY : libft/libft/ft_atoi.c.i

libft/libft/ft_atoi.s: libft/libft/ft_atoi.c.s

.PHONY : libft/libft/ft_atoi.s

# target to generate assembly for a file
libft/libft/ft_atoi.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_atoi.c.s
.PHONY : libft/libft/ft_atoi.c.s

libft/libft/ft_bzero.o: libft/libft/ft_bzero.c.o

.PHONY : libft/libft/ft_bzero.o

# target to build an object file
libft/libft/ft_bzero.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_bzero.c.o
.PHONY : libft/libft/ft_bzero.c.o

libft/libft/ft_bzero.i: libft/libft/ft_bzero.c.i

.PHONY : libft/libft/ft_bzero.i

# target to preprocess a source file
libft/libft/ft_bzero.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_bzero.c.i
.PHONY : libft/libft/ft_bzero.c.i

libft/libft/ft_bzero.s: libft/libft/ft_bzero.c.s

.PHONY : libft/libft/ft_bzero.s

# target to generate assembly for a file
libft/libft/ft_bzero.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_bzero.c.s
.PHONY : libft/libft/ft_bzero.c.s

libft/libft/ft_isdigit.o: libft/libft/ft_isdigit.c.o

.PHONY : libft/libft/ft_isdigit.o

# target to build an object file
libft/libft/ft_isdigit.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_isdigit.c.o
.PHONY : libft/libft/ft_isdigit.c.o

libft/libft/ft_isdigit.i: libft/libft/ft_isdigit.c.i

.PHONY : libft/libft/ft_isdigit.i

# target to preprocess a source file
libft/libft/ft_isdigit.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_isdigit.c.i
.PHONY : libft/libft/ft_isdigit.c.i

libft/libft/ft_isdigit.s: libft/libft/ft_isdigit.c.s

.PHONY : libft/libft/ft_isdigit.s

# target to generate assembly for a file
libft/libft/ft_isdigit.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_isdigit.c.s
.PHONY : libft/libft/ft_isdigit.c.s

libft/libft/ft_memset.o: libft/libft/ft_memset.c.o

.PHONY : libft/libft/ft_memset.o

# target to build an object file
libft/libft/ft_memset.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_memset.c.o
.PHONY : libft/libft/ft_memset.c.o

libft/libft/ft_memset.i: libft/libft/ft_memset.c.i

.PHONY : libft/libft/ft_memset.i

# target to preprocess a source file
libft/libft/ft_memset.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_memset.c.i
.PHONY : libft/libft/ft_memset.c.i

libft/libft/ft_memset.s: libft/libft/ft_memset.c.s

.PHONY : libft/libft/ft_memset.s

# target to generate assembly for a file
libft/libft/ft_memset.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_memset.c.s
.PHONY : libft/libft/ft_memset.c.s

libft/libft/ft_strcat.o: libft/libft/ft_strcat.c.o

.PHONY : libft/libft/ft_strcat.o

# target to build an object file
libft/libft/ft_strcat.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcat.c.o
.PHONY : libft/libft/ft_strcat.c.o

libft/libft/ft_strcat.i: libft/libft/ft_strcat.c.i

.PHONY : libft/libft/ft_strcat.i

# target to preprocess a source file
libft/libft/ft_strcat.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcat.c.i
.PHONY : libft/libft/ft_strcat.c.i

libft/libft/ft_strcat.s: libft/libft/ft_strcat.c.s

.PHONY : libft/libft/ft_strcat.s

# target to generate assembly for a file
libft/libft/ft_strcat.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcat.c.s
.PHONY : libft/libft/ft_strcat.c.s

libft/libft/ft_strcmp.o: libft/libft/ft_strcmp.c.o

.PHONY : libft/libft/ft_strcmp.o

# target to build an object file
libft/libft/ft_strcmp.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcmp.c.o
.PHONY : libft/libft/ft_strcmp.c.o

libft/libft/ft_strcmp.i: libft/libft/ft_strcmp.c.i

.PHONY : libft/libft/ft_strcmp.i

# target to preprocess a source file
libft/libft/ft_strcmp.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcmp.c.i
.PHONY : libft/libft/ft_strcmp.c.i

libft/libft/ft_strcmp.s: libft/libft/ft_strcmp.c.s

.PHONY : libft/libft/ft_strcmp.s

# target to generate assembly for a file
libft/libft/ft_strcmp.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcmp.c.s
.PHONY : libft/libft/ft_strcmp.c.s

libft/libft/ft_strcpy.o: libft/libft/ft_strcpy.c.o

.PHONY : libft/libft/ft_strcpy.o

# target to build an object file
libft/libft/ft_strcpy.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcpy.c.o
.PHONY : libft/libft/ft_strcpy.c.o

libft/libft/ft_strcpy.i: libft/libft/ft_strcpy.c.i

.PHONY : libft/libft/ft_strcpy.i

# target to preprocess a source file
libft/libft/ft_strcpy.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcpy.c.i
.PHONY : libft/libft/ft_strcpy.c.i

libft/libft/ft_strcpy.s: libft/libft/ft_strcpy.c.s

.PHONY : libft/libft/ft_strcpy.s

# target to generate assembly for a file
libft/libft/ft_strcpy.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strcpy.c.s
.PHONY : libft/libft/ft_strcpy.c.s

libft/libft/ft_strjoin.o: libft/libft/ft_strjoin.c.o

.PHONY : libft/libft/ft_strjoin.o

# target to build an object file
libft/libft/ft_strjoin.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strjoin.c.o
.PHONY : libft/libft/ft_strjoin.c.o

libft/libft/ft_strjoin.i: libft/libft/ft_strjoin.c.i

.PHONY : libft/libft/ft_strjoin.i

# target to preprocess a source file
libft/libft/ft_strjoin.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strjoin.c.i
.PHONY : libft/libft/ft_strjoin.c.i

libft/libft/ft_strjoin.s: libft/libft/ft_strjoin.c.s

.PHONY : libft/libft/ft_strjoin.s

# target to generate assembly for a file
libft/libft/ft_strjoin.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strjoin.c.s
.PHONY : libft/libft/ft_strjoin.c.s

libft/libft/ft_strlen.o: libft/libft/ft_strlen.c.o

.PHONY : libft/libft/ft_strlen.o

# target to build an object file
libft/libft/ft_strlen.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strlen.c.o
.PHONY : libft/libft/ft_strlen.c.o

libft/libft/ft_strlen.i: libft/libft/ft_strlen.c.i

.PHONY : libft/libft/ft_strlen.i

# target to preprocess a source file
libft/libft/ft_strlen.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strlen.c.i
.PHONY : libft/libft/ft_strlen.c.i

libft/libft/ft_strlen.s: libft/libft/ft_strlen.c.s

.PHONY : libft/libft/ft_strlen.s

# target to generate assembly for a file
libft/libft/ft_strlen.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strlen.c.s
.PHONY : libft/libft/ft_strlen.c.s

libft/libft/ft_strnew.o: libft/libft/ft_strnew.c.o

.PHONY : libft/libft/ft_strnew.o

# target to build an object file
libft/libft/ft_strnew.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strnew.c.o
.PHONY : libft/libft/ft_strnew.c.o

libft/libft/ft_strnew.i: libft/libft/ft_strnew.c.i

.PHONY : libft/libft/ft_strnew.i

# target to preprocess a source file
libft/libft/ft_strnew.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strnew.c.i
.PHONY : libft/libft/ft_strnew.c.i

libft/libft/ft_strnew.s: libft/libft/ft_strnew.c.s

.PHONY : libft/libft/ft_strnew.s

# target to generate assembly for a file
libft/libft/ft_strnew.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/libft/libft/ft_strnew.c.s
.PHONY : libft/libft/ft_strnew.c.s

vm/controller/change_first_reg.o: vm/controller/change_first_reg.c.o

.PHONY : vm/controller/change_first_reg.o

# target to build an object file
vm/controller/change_first_reg.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/change_first_reg.c.o
.PHONY : vm/controller/change_first_reg.c.o

vm/controller/change_first_reg.i: vm/controller/change_first_reg.c.i

.PHONY : vm/controller/change_first_reg.i

# target to preprocess a source file
vm/controller/change_first_reg.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/change_first_reg.c.i
.PHONY : vm/controller/change_first_reg.c.i

vm/controller/change_first_reg.s: vm/controller/change_first_reg.c.s

.PHONY : vm/controller/change_first_reg.s

# target to generate assembly for a file
vm/controller/change_first_reg.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/change_first_reg.c.s
.PHONY : vm/controller/change_first_reg.c.s

vm/controller/check_flags_for.o: vm/controller/check_flags_for.c.o

.PHONY : vm/controller/check_flags_for.o

# target to build an object file
vm/controller/check_flags_for.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/check_flags_for.c.o
.PHONY : vm/controller/check_flags_for.c.o

vm/controller/check_flags_for.i: vm/controller/check_flags_for.c.i

.PHONY : vm/controller/check_flags_for.i

# target to preprocess a source file
vm/controller/check_flags_for.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/check_flags_for.c.i
.PHONY : vm/controller/check_flags_for.c.i

vm/controller/check_flags_for.s: vm/controller/check_flags_for.c.s

.PHONY : vm/controller/check_flags_for.s

# target to generate assembly for a file
vm/controller/check_flags_for.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/check_flags_for.c.s
.PHONY : vm/controller/check_flags_for.c.s

vm/controller/create_fun.o: vm/controller/create_fun.c.o

.PHONY : vm/controller/create_fun.o

# target to build an object file
vm/controller/create_fun.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/create_fun.c.o
.PHONY : vm/controller/create_fun.c.o

vm/controller/create_fun.i: vm/controller/create_fun.c.i

.PHONY : vm/controller/create_fun.i

# target to preprocess a source file
vm/controller/create_fun.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/create_fun.c.i
.PHONY : vm/controller/create_fun.c.i

vm/controller/create_fun.s: vm/controller/create_fun.c.s

.PHONY : vm/controller/create_fun.s

# target to generate assembly for a file
vm/controller/create_fun.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/create_fun.c.s
.PHONY : vm/controller/create_fun.c.s

vm/controller/get_flags.o: vm/controller/get_flags.c.o

.PHONY : vm/controller/get_flags.o

# target to build an object file
vm/controller/get_flags.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/get_flags.c.o
.PHONY : vm/controller/get_flags.c.o

vm/controller/get_flags.i: vm/controller/get_flags.c.i

.PHONY : vm/controller/get_flags.i

# target to preprocess a source file
vm/controller/get_flags.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/get_flags.c.i
.PHONY : vm/controller/get_flags.c.i

vm/controller/get_flags.s: vm/controller/get_flags.c.s

.PHONY : vm/controller/get_flags.s

# target to generate assembly for a file
vm/controller/get_flags.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/get_flags.c.s
.PHONY : vm/controller/get_flags.c.s

vm/controller/get_players.o: vm/controller/get_players.c.o

.PHONY : vm/controller/get_players.o

# target to build an object file
vm/controller/get_players.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/get_players.c.o
.PHONY : vm/controller/get_players.c.o

vm/controller/get_players.i: vm/controller/get_players.c.i

.PHONY : vm/controller/get_players.i

# target to preprocess a source file
vm/controller/get_players.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/get_players.c.i
.PHONY : vm/controller/get_players.c.i

vm/controller/get_players.s: vm/controller/get_players.c.s

.PHONY : vm/controller/get_players.s

# target to generate assembly for a file
vm/controller/get_players.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/get_players.c.s
.PHONY : vm/controller/get_players.c.s

vm/controller/help_func.o: vm/controller/help_func.c.o

.PHONY : vm/controller/help_func.o

# target to build an object file
vm/controller/help_func.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/help_func.c.o
.PHONY : vm/controller/help_func.c.o

vm/controller/help_func.i: vm/controller/help_func.c.i

.PHONY : vm/controller/help_func.i

# target to preprocess a source file
vm/controller/help_func.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/help_func.c.i
.PHONY : vm/controller/help_func.c.i

vm/controller/help_func.s: vm/controller/help_func.c.s

.PHONY : vm/controller/help_func.s

# target to generate assembly for a file
vm/controller/help_func.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/help_func.c.s
.PHONY : vm/controller/help_func.c.s

vm/controller/main.o: vm/controller/main.c.o

.PHONY : vm/controller/main.o

# target to build an object file
vm/controller/main.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/main.c.o
.PHONY : vm/controller/main.c.o

vm/controller/main.i: vm/controller/main.c.i

.PHONY : vm/controller/main.i

# target to preprocess a source file
vm/controller/main.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/main.c.i
.PHONY : vm/controller/main.c.i

vm/controller/main.s: vm/controller/main.c.s

.PHONY : vm/controller/main.s

# target to generate assembly for a file
vm/controller/main.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/main.c.s
.PHONY : vm/controller/main.c.s

vm/controller/print_func.o: vm/controller/print_func.c.o

.PHONY : vm/controller/print_func.o

# target to build an object file
vm/controller/print_func.c.o:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/print_func.c.o
.PHONY : vm/controller/print_func.c.o

vm/controller/print_func.i: vm/controller/print_func.c.i

.PHONY : vm/controller/print_func.i

# target to preprocess a source file
vm/controller/print_func.c.i:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/print_func.c.i
.PHONY : vm/controller/print_func.c.i

vm/controller/print_func.s: vm/controller/print_func.c.s

.PHONY : vm/controller/print_func.s

# target to generate assembly for a file
vm/controller/print_func.c.s:
	$(MAKE) -f CMakeFiles/Corewar.dir/build.make CMakeFiles/Corewar.dir/vm/controller/print_func.c.s
.PHONY : vm/controller/print_func.c.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... Corewar"
	@echo "... libft/libft/ft_atoi.o"
	@echo "... libft/libft/ft_atoi.i"
	@echo "... libft/libft/ft_atoi.s"
	@echo "... libft/libft/ft_bzero.o"
	@echo "... libft/libft/ft_bzero.i"
	@echo "... libft/libft/ft_bzero.s"
	@echo "... libft/libft/ft_isdigit.o"
	@echo "... libft/libft/ft_isdigit.i"
	@echo "... libft/libft/ft_isdigit.s"
	@echo "... libft/libft/ft_memset.o"
	@echo "... libft/libft/ft_memset.i"
	@echo "... libft/libft/ft_memset.s"
	@echo "... libft/libft/ft_strcat.o"
	@echo "... libft/libft/ft_strcat.i"
	@echo "... libft/libft/ft_strcat.s"
	@echo "... libft/libft/ft_strcmp.o"
	@echo "... libft/libft/ft_strcmp.i"
	@echo "... libft/libft/ft_strcmp.s"
	@echo "... libft/libft/ft_strcpy.o"
	@echo "... libft/libft/ft_strcpy.i"
	@echo "... libft/libft/ft_strcpy.s"
	@echo "... libft/libft/ft_strjoin.o"
	@echo "... libft/libft/ft_strjoin.i"
	@echo "... libft/libft/ft_strjoin.s"
	@echo "... libft/libft/ft_strlen.o"
	@echo "... libft/libft/ft_strlen.i"
	@echo "... libft/libft/ft_strlen.s"
	@echo "... libft/libft/ft_strnew.o"
	@echo "... libft/libft/ft_strnew.i"
	@echo "... libft/libft/ft_strnew.s"
	@echo "... vm/controller/change_first_reg.o"
	@echo "... vm/controller/change_first_reg.i"
	@echo "... vm/controller/change_first_reg.s"
	@echo "... vm/controller/check_flags_for.o"
	@echo "... vm/controller/check_flags_for.i"
	@echo "... vm/controller/check_flags_for.s"
	@echo "... vm/controller/create_fun.o"
	@echo "... vm/controller/create_fun.i"
	@echo "... vm/controller/create_fun.s"
	@echo "... vm/controller/get_flags.o"
	@echo "... vm/controller/get_flags.i"
	@echo "... vm/controller/get_flags.s"
	@echo "... vm/controller/get_players.o"
	@echo "... vm/controller/get_players.i"
	@echo "... vm/controller/get_players.s"
	@echo "... vm/controller/help_func.o"
	@echo "... vm/controller/help_func.i"
	@echo "... vm/controller/help_func.s"
	@echo "... vm/controller/main.o"
	@echo "... vm/controller/main.i"
	@echo "... vm/controller/main.s"
	@echo "... vm/controller/print_func.o"
	@echo "... vm/controller/print_func.i"
	@echo "... vm/controller/print_func.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

